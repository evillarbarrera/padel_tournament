<%= form_with(model: @campeonato, local: true, html: { multipart: true }) do |form| %>
  <ul class="nav nav-tabs mb-4" id="campeonatoTabs" role="tablist">
    <li class="nav-item" role="presentation">
      <a class="nav-link active" id="datos-tab" data-bs-toggle="tab" href="#datos" role="tab" aria-controls="datos" aria-selected="true">Datos Básicos</a>
    </li>
    <li class="nav-item" role="presentation">
      <a class="nav-link" id="tipos-tab" data-bs-toggle="tab" href="#tipos" role="tab" aria-controls="tipos" aria-selected="false">Tipos Inscripción</a>
    </li>
    <li class="nav-item" role="presentation">
      <a class="nav-link" id="categorias-tab" data-bs-toggle="tab" href="#categorias" role="tab" aria-controls="categorias" aria-selected="false">Categorías</a>
    </li>
       <li class="nav-item" role="presentation">
      <a class="nav-link" id="inscripciones-tab" data-bs-toggle="tab" href="#inscripciones" role="tab" aria-controls="inscripciones" aria-selected="false">Inscripciones</a>
    </li>
    <li class="nav-item" role="presentation">
      <a class="nav-link" id="partidos-tab" data-bs-toggle="tab" href="#partidos" role="tab" aria-controls="partidos" aria-selected="false">Partidos</a>
    </li>
  </ul>

  <div class="tab-content" id="campeonatoTabsContent">
    <!-- Datos Básicos -->
    <div class="tab-pane fade show active" id="datos" role="tabpanel" aria-labelledby="datos-tab">
      <div class="row">
        <div class="mb-3 col-12">
          <label>Club</label>
          <input type="text" class="form-control" value="<%= current_user.club.nombre %>" disabled>
        </div>

        <div class="col-md-6 mb-3">
          <%= form.label :nombre %>
          <%= form.text_field :nombre, class: "form-control" %>
        </div>

        <div class="col-md-2">
          <%= form.label :tipo, "Tipo de Campeonato" %>
          <%= form.select :tipo, ['Campeonato', 'Liga', 'Americano'], {}, class: "form-control" %>
        </div>

        <div class="col-md-2">
          <%= form.label :fecha_inicio %>
          <%= form.date_field :fecha_inicio, class: "form-control" %>
        </div>

        <div class="col-md-2">
          <%= form.label :fecha_termino %>
          <%= form.date_field :fecha_termino, class: "form-control" %>
        </div>

        <div class="col-md-2">
          <%= form.label :cupos_maximos, "Cupos Máximos" %>
          <%= form.number_field :cupos_maximos, class: "form-control" %>
        </div>

        <div class="col-md-2">
          <%= form.label :estado %>
          <%= form.select :estado, ['Pendiente', 'Abierto', 'En curso', 'Finalizado'], {}, class: "form-control" %>
        </div>
      </div>

      <div class="mb-3">
        <%= form.label :descripcion %>
        <%= form.text_area :descripcion, class: "form-control", rows: 3 %>
      </div>

      <div class="mb-3">
        <%= form.label :normativo, "Normativa" %>
        <%= form.text_area :normativo, class: "form-control", rows: 3 %>
      </div>

      <div class="mb-3">
        <%= form.label :reglas, "Reglas adicionales" %>
        <%= form.text_area :reglas, class: "form-control", rows: 3 %>
      </div>

      <div class="mb-3">
        <%= form.label :foto %>
        <%= form.file_field :foto, class: "form-control form-control-sm input-compact", style: "border-radius: 8px; height: 34px; width: 100%;" %>
      </div>
    </div>

    <!-- Tipos Inscripción -->
    <div class="tab-pane fade" id="tipos" role="tabpanel" aria-labelledby="tipos-tab">
      <div id="tipos-inscripcion-container">
        <% if @campeonato.tipo_inscripcions.any? %>
          <% @campeonato.tipo_inscripcions.each_with_index do |tipo, index| %>
            <div class="mb-3 border p-3 rounded tipo-inscripcion">
              <h6>Tipo de Inscripción <%= index + 1 %></h6>
              <button type="button" class="btn btn-sm btn-danger float-end eliminar-tipo">Eliminar</button>

              <!-- Campo oculto con el ID -->
              <input type="hidden" name="tipo_id[]" value="<%= tipo.id %>">

              <div class="mb-2">
                <label>Nombre</label>
                <input type="text" class="form-control" name="tipo_nombre[]" value="<%= tipo.nombre %>">
              </div>
              <div class="mb-2">
                <label>Monto</label>
                <input type="number" class="form-control" name="tipo_monto[]" value="<%= tipo.monto %>">
              </div>
              <div class="mb-2">
                <label>Fecha límite de pago</label>
                <input type="date" class="form-control" name="tipo_fecha_limite[]" value="<%= tipo.fecha_limite_pago %>">
              </div>
              <div class="mb-2">
                <label>Beneficios</label>
                <textarea class="form-control" name="tipo_beneficios[]"><%= tipo.beneficios %></textarea>
              </div>
            </div>
          <% end %>
        <% else %>
          <div class="mb-3 border p-3 rounded tipo-inscripcion">
            <h6>Tipo de Inscripción 1</h6>
            <button type="button" class="btn btn-sm btn-danger float-end eliminar-tipo">Eliminar</button>
            <div class="mb-2">
              <label>Nombre</label>
              <input type="text" class="form-control" name="tipo_nombre[]">
            </div>
            <div class="mb-2">
              <label>Monto</label>
              <input type="number" class="form-control" name="tipo_monto[]">
            </div>
            <div class="mb-2">
              <label>Fecha límite de pago</label>
              <input type="date" class="form-control" name="tipo_fecha_limite[]">
            </div>
            <div class="mb-2">
              <label>Beneficios</label>
              <textarea class="form-control" name="tipo_beneficios[]"></textarea>
            </div>
          </div>
        <% end %>
      </div>
      <button type="button" class="btn btn-outline-primary mt-2" id="agregar-tipo">+ Agregar tipo</button>
    </div>


    <!-- Categorías -->
    <div class="tab-pane fade" id="categorias" role="tabpanel" aria-labelledby="categorias-tab">
        <h5 class="mb-3">Selecciona las categorías del campeonato</h5>
        <div class="mb-4 d-flex flex-wrap gap-2">
          <button type="button" class="btn btn-sm btn-primary mb-2" onclick="toggleCheckboxes('all', true)">Seleccionar todos</button>
            <button type="button" class="btn btn-sm btn-secondary mb-2" onclick="toggleCheckboxes('hombres', true)">Seleccionar todos hombres</button>
            <button type="button" class="btn btn-sm btn-secondary mb-2" onclick="toggleCheckboxes('mujeres', true)">Seleccionar todos mujeres</button>
            <button type="button" class="btn btn-sm btn-danger mb-2" onclick="toggleCheckboxes('all', false)">Deseleccionar todos</button>

        </div>

       
        
        <div class="row">
          <!-- Categorías Mujeres a la izquierda -->
          <div class="col-md-6">
            <h4>Categorías Mujeres</h4>
            <button type="button" class="btn btn-sm btn-primary mb-2" onclick="toggleCheckboxes('mujeres', true)">Seleccionar todo</button>
            <button type="button" class="btn btn-sm btn-secondary mb-2" onclick="toggleCheckboxes('mujeres', false)">Deseleccionar todo</button>

            <% @categorias.where(sexo: 'Mujeres').each do |categoria| %>
              <div class="form-check">
                <%= check_box_tag "campeonato[categoria_ids][]", categoria.id, @campeonato.categoria_ids.include?(categoria.id), id: "categoria_#{categoria.id}", class: "form-check-input mujeres" %>
                <%= label_tag "categoria_#{categoria.id}", categoria.nombre, class: "form-check-label" %>
              </div>
            <% end %>
          </div>

          <!-- Categorías Hombres a la derecha -->
          <div class="col-md-6">
            <h4>Categorías Hombres</h4>
            <button type="button" class="btn btn-sm btn-primary mb-2" onclick="toggleCheckboxes('hombres', true)">Seleccionar todo</button>
            <button type="button" class="btn btn-sm btn-secondary mb-2" onclick="toggleCheckboxes('hombres', false)">Deseleccionar todo</button>

            <% @categorias.where(sexo: 'Hombres').each do |categoria| %>
              <div class="form-check">
                <%= check_box_tag "campeonato[categoria_ids][]", categoria.id, @campeonato.categoria_ids.include?(categoria.id), id: "categoria_#{categoria.id}", class: "form-check-input hombres" %>
                <%= label_tag "categoria_#{categoria.id}", categoria.nombre, class: "form-check-label" %>
              </div>
            <% end %>
          </div>
        </div>
    </div>

    <!-- Inscripciones -->
    <div class="tab-pane fade" id="inscripciones" role="tabpanel" aria-labelledby="inscripciones-tab">
          <% if @campeonato.inscripciones.any? %>
            <table class="table">
              <thead>
                <tr>
                  <th>Jugador</th>
                  <th>Categoría</th>
                </tr>
              </thead>
              <tbody>
                <% @campeonato.inscripciones.each do |inscripcion| %>
                  <tr>
                    <td><%= inscripcion.user.nombre %></td>
                    <td><%= inscripcion.categoria.nombre %></td>
                  </tr>
                <% end %>
              </tbody>
            </table>
          <% else %>
            <p>No hay inscripciones registradas.</p>
          <% end %>
        </div>
    </div>
    
    <!-- Partidos -->
   <!-- Partidos -->
    <div class="tab-pane fade" id="partidos" role="tabpanel" aria-labelledby="partidos-tab">
      <ul class="nav nav-tabs mt-3" id="partidosSubTabs" role="tablist">
        <li class="nav-item" role="presentation">
          <button class="nav-link active" id="horarios-tab" data-bs-toggle="tab" data-bs-target="#horarios" type="button" role="tab" aria-controls="horarios" aria-selected="true">
            Horarios Bloqueados
          </button>
        </li>
        <li class="nav-item" role="presentation">
          <button class="nav-link" id="calendario-tab" data-bs-toggle="tab" data-bs-target="#calendario" type="button" role="tab" aria-controls="calendario" aria-selected="false">
            Generación de Calendario
          </button>
        </li>
      </ul>

      <div class="tab-content pt-3" id="partidosSubTabsContent">
        <div class="tab-pane fade show active" id="horarios" role="tabpanel" aria-labelledby="horarios-tab">
          <!-- Aquí va el contenido de Horarios Bloqueados -->
          <div>
            <h5>Selecciona los horarios bloqueados</h5>
            <div class="alert alert-info">
              El calendario se genera dinámicamente según la <strong>fecha de inicio</strong> y <strong>fecha de término</strong> del campeonato.
            </div>

            <div id="bloqueador-calendario" class="table-responsive">
              <table class="table table-bordered text-center">
                <thead>
                  <tr>
                    <th>Hora</th>
                    <th>Lunes</th>
                    <th>Martes</th>
                    <th>Miércoles</th>
                    <th>Jueves</th>
                    <th>Viernes</th>
                    <th>Sábado</th>
                    <th>Domingo</th>
                  </tr>
                </thead>
                <tbody id="bloqueador-body">
                  <!-- JS insertará filas aquí -->
                </tbody>
              </table>
            </div>

            <button class="btn btn-primary mt-2" id="guardar-bloqueos">Guardar Horarios Bloqueados</button>
          </div>

        </div>
        <div class="tab-pane fade" id="calendario" role="tabpanel" aria-labelledby="calendario-tab">
          <!-- Aquí va el contenido de Generación de Calendario -->
          <p>Contenido para generación de calendario...</p>
        </div>
      </div>
    </div>
                

  </div>

  <div class="mt-4">
    <%= form.submit "Guardar Campeonato", class: "btn btn-primary" %>
  </div>
<% end %>
<script>
  // Agregar nuevo tipo inscripción
  document.getElementById('agregar-tipo').addEventListener('click', function() {
    const container = document.getElementById('tipos-inscripcion-container');
    const count = container.querySelectorAll('.tipo-inscripcion').length + 1;

    const div = document.createElement('div');
    div.classList.add('mb-3', 'border', 'p-3', 'rounded', 'tipo-inscripcion');

    div.innerHTML = `
      <h6>Tipo de Inscripción ${count}</h6>
      <button type="button" class="btn btn-sm btn-danger float-end eliminar-tipo">Eliminar</button>
      <div class="mb-2">
        <label>Nombre</label>
        <input type="text" class="form-control" name="tipo_nombre[]">
      </div>
      <div class="mb-2">
        <label>Monto</label>
        <input type="number" class="form-control" name="tipo_monto[]">
      </div>
      <div class="mb-2">
        <label>Fecha límite de pago</label>
        <input type="date" class="form-control" name="tipo_fecha_limite[]">
      </div>
      <div class="mb-2">
        <label>Beneficios</label>
        <textarea class="form-control" name="tipo_beneficios[]"></textarea>
      </div>
    `;

    container.appendChild(div);
  });

  // Eliminar tipo inscripción
  document.getElementById('tipos-inscripcion-container').addEventListener('click', function(event) {
    if(event.target.classList.contains('eliminar-tipo')) {
      const tipoDiv = event.target.closest('.tipo-inscripcion');
      tipoDiv.remove();
      // Re-numerar títulos
      const tipos = document.querySelectorAll('.tipo-inscripcion h6');
      tipos.forEach((h6, index) => {
        h6.textContent = `Tipo de Inscripción ${index + 1}`;
      });
    }
  });
</script>



<script>
  // Función para seleccionar/deseleccionar checkboxes según grupo
  function toggleCheckboxes(group, select) {
    let checkboxes;
    if (group === 'all') {
      checkboxes = document.querySelectorAll('.form-check-input');
    } else if (group === 'hombres') {
      checkboxes = document.querySelectorAll('.form-check-input.hombres');
    } else if (group === 'mujeres') {
      checkboxes = document.querySelectorAll('.form-check-input.mujeres');
    }

    checkboxes.forEach(cb => cb.checked = select);
  }
</script>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const body = document.getElementById('bloqueador-body');
    const fechaInicioInput = document.querySelector('input[name="campeonato[fecha_inicio]"]');
    const fechaTerminoInput = document.querySelector('input[name="campeonato[fecha_termino]"]');
    
    // Crea horarios desde 08:00 a 22:00
    function generarHoras() {
      const horas = [];
      for (let i = 8; i <= 22; i++) {
        horas.push(i.toString().padStart(2, '0') + ":00");
      }
      return horas;
    }

    function generarCalendario() {
      const inicio = new Date(fechaInicioInput.value);
      const fin = new Date(fechaTerminoInput.value);
      if (isNaN(inicio) || isNaN(fin)) return;

      body.innerHTML = '';
      const horas = generarHoras();

      horas.forEach(hora => {
        const row = document.createElement('tr');
        row.innerHTML = `<td><strong>${hora}</strong></td>`;
        for (let i = 0; i < 7; i++) {
          const cell = document.createElement('td');
          cell.classList.add('selectable-slot');
          cell.dataset.hora = hora;
          cell.dataset.dia = i; // 0: lunes, 6: domingo
          cell.style.cursor = "pointer";
          cell.style.backgroundColor = "#fff";
          row.appendChild(cell);
        }
        body.appendChild(row);
      });
    }

    // Manejo de selección
    document.addEventListener('click', function (e) {
      if (e.target.classList.contains('selectable-slot')) {
        e.target.classList.toggle('selected');
        e.target.style.backgroundColor = e.target.classList.contains('selected') ? '#FF9F9F' : '#fff';
      }
    });

    // Cargar calendario cuando se modifican las fechas
    fechaInicioInput.addEventListener('change', generarCalendario);
    fechaTerminoInput.addEventListener('change', generarCalendario);

    // Guardar bloqueos
    document.getElementById('guardar-bloqueos').addEventListener('click', function () {
      const selected = document.querySelectorAll('.selectable-slot.selected');
      const inicio = new Date(fechaInicioInput.value);
      if (isNaN(inicio)) {
        alert("Primero selecciona una fecha de inicio");
        return;
      }

      const bloqueos = [];

      selected.forEach(cell => {
        const hora = cell.dataset.hora;
        const diaOffset = parseInt(cell.dataset.dia);
        const diaBase = new Date(inicio);
        diaBase.setDate(inicio.getDate() + diaOffset);
        
        const fechaInicio = new Date(diaBase.toISOString().split('T')[0] + 'T' + hora);
        const fechaFin = new Date(fechaInicio.getTime() + 60 * 60 * 1000); // 1h

        bloqueos.push({
          fechahora_inicio: fechaInicio.toISOString(),
          fechahora_fin: fechaFin.toISOString()
        });
      });

      // Enviar con fetch
      fetch('/horarios_bloqueados', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content
        },
        body: JSON.stringify({
          campeonato_id: <%= @campeonato.id %>,
          bloqueos: bloqueos
        })
      })
      .then(res => res.json())
      .then(data => {
        alert('Bloqueos guardados correctamente');
        document.querySelectorAll('.selectable-slot.selected').forEach(c => {
          c.classList.remove('selected');
          c.style.backgroundColor = '#fff';
        });
      })
      .catch(err => {
        alert('Error guardando bloqueos');
        console.error(err);
      });
    });
  });
</script>
