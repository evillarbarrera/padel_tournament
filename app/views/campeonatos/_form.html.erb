<%= form_with(model: @campeonato, local: true, html: { multipart: true }) do |form| %>
  <%= hidden_field_tag 'campeonato_id', @campeonato.id, id: 'campeonato-id' %>
  <ul class="nav nav-tabs mb-4" id="campeonatoTabs" role="tablist">
    <li class="nav-item" role="presentation">
      <a class="nav-link active" id="datos-tab" data-bs-toggle="tab" href="#datos" role="tab" aria-controls="datos" aria-selected="true">Datos Básicos</a>
    </li>
    <li class="nav-item" role="presentation">
      <a class="nav-link" id="tipos-tab" data-bs-toggle="tab" href="#tipos" role="tab" aria-controls="tipos" aria-selected="false">Tipos Inscripción</a>
    </li>
    <li class="nav-item" role="presentation">
      <a class="nav-link" id="categorias-tab" data-bs-toggle="tab" href="#categorias" role="tab" aria-controls="categorias" aria-selected="false">Categorías</a>
    </li>
       <li class="nav-item" role="presentation">
      <a class="nav-link" id="inscripciones-tab" data-bs-toggle="tab" href="#inscripciones" role="tab" aria-controls="inscripciones" aria-selected="false">Inscripciones</a>
    </li>
    <li class="nav-item" role="presentation">
      <a class="nav-link" id="partidos-tab" data-bs-toggle="tab" href="#partidos" role="tab" aria-controls="partidos" aria-selected="false">Partidos</a>
    </li>
  </ul>

  <div class="tab-content" id="campeonatoTabsContent">
    <!-- Datos Básicos -->
    <div class="tab-pane fade show active" id="datos" role="tabpanel" aria-labelledby="datos-tab">
      <div class="row">
        <div class="mb-3 col-12">
          <label>Club</label>
          <input type="text" class="form-control" value="<%= current_user.club.nombre %>" disabled>
        </div>

        <div class="col-md-6 mb-3">
          <%= form.label :nombre %>
          <%= form.text_field :nombre, class: "form-control" %>
        </div>

        <div class="col-md-2">
          <%= form.label :tipo, "Tipo de Campeonato" %>
          <%= form.select :tipo, ['Campeonato', 'Liga', 'Americano'], {}, class: "form-control" %>
        </div>

        <div class="col-md-2">
          <%= form.label :fecha_inicio %>
          <%= form.date_field :fecha_inicio, class: "form-control" %>
        </div>

        <div class="col-md-2">
          <%= form.label :fecha_termino %>
          <%= form.date_field :fecha_termino, class: "form-control" %>
        </div>

        <div class="col-md-2">
          <%= form.label :cupos_maximos, "Cupos Máximos" %>
          <%= form.number_field :cupos_maximos, class: "form-control" %>
        </div>

        <div class="col-md-2">
          <%= form.label :estado %>
          <%= form.select :estado, ['Pendiente', 'Abierto', 'En curso', 'Finalizado'], {}, class: "form-control" %>
        </div>
      </div>

      <div class="mb-3">
        <%= form.label :descripcion %>
        <%= form.text_area :descripcion, class: "form-control", rows: 3 %>
      </div>

      <div class="mb-3">
        <%= form.label :normativo, "Normativa" %>
        <%= form.text_area :normativo, class: "form-control", rows: 3 %>
      </div>

      <div class="mb-3">
        <%= form.label :reglas, "Reglas adicionales" %>
        <%= form.text_area :reglas, class: "form-control", rows: 3 %>
      </div>

      <div class="mb-3">
        <%= form.label :foto %>
        <%= form.file_field :foto, class: "form-control form-control-sm input-compact", style: "border-radius: 8px; height: 34px; width: 100%;" %>
      </div>
    </div>

    <!-- Tipos Inscripción -->
    <div class="tab-pane fade" id="tipos" role="tabpanel" aria-labelledby="tipos-tab">
      <div id="tipos-inscripcion-container">
        <% if @campeonato.tipo_inscripcions.any? %>
          <% @campeonato.tipo_inscripcions.each_with_index do |tipo, index| %>
            <div class="mb-3 border p-3 rounded tipo-inscripcion">
              <h6>Tipo de Inscripción <%= index + 1 %></h6>
              <button type="button" class="btn btn-sm btn-danger float-end eliminar-tipo">Eliminar</button>

              <!-- Campo oculto con el ID -->
              <input type="hidden" name="tipo_id[]" value="<%= tipo.id %>">

              <div class="mb-2">
                <label>Nombre</label>
                <input type="text" class="form-control" name="tipo_nombre[]" value="<%= tipo.nombre %>">
              </div>
              <div class="mb-2">
                <label>Monto</label>
                <input type="number" class="form-control" name="tipo_monto[]" value="<%= tipo.monto %>">
              </div>
              <div class="mb-2">
                <label>Fecha límite de pago</label>
                <input type="date" class="form-control" name="tipo_fecha_limite[]" value="<%= tipo.fecha_limite_pago %>">
              </div>
              <div class="mb-2">
                <label>Beneficios</label>
                <textarea class="form-control" name="tipo_beneficios[]"><%= tipo.beneficios %></textarea>
              </div>
            </div>
          <% end %>
        <% else %>
          <div class="mb-3 border p-3 rounded tipo-inscripcion">
            <h6>Tipo de Inscripción 1</h6>
            <button type="button" class="btn btn-sm btn-danger float-end eliminar-tipo">Eliminar</button>
            <div class="mb-2">
              <label>Nombre</label>
              <input type="text" class="form-control" name="tipo_nombre[]">
            </div>
            <div class="mb-2">
              <label>Monto</label>
              <input type="number" class="form-control" name="tipo_monto[]">
            </div>
            <div class="mb-2">
              <label>Fecha límite de pago</label>
              <input type="date" class="form-control" name="tipo_fecha_limite[]">
            </div>
            <div class="mb-2">
              <label>Beneficios</label>
              <textarea class="form-control" name="tipo_beneficios[]"></textarea>
            </div>
          </div>
        <% end %>
      </div>
      <button type="button" class="btn btn-outline-primary mt-2" id="agregar-tipo">+ Agregar tipo</button>
    </div>


    <!-- Categorías -->
    <div class="tab-pane fade" id="categorias" role="tabpanel" aria-labelledby="categorias-tab">
        <h5 class="mb-3">Selecciona las categorías del campeonato</h5>
        <div class="mb-4 d-flex flex-wrap gap-2">
          <button type="button" class="btn btn-sm btn-primary mb-2" onclick="toggleCheckboxes('all', true)">Seleccionar todos</button>
            <button type="button" class="btn btn-sm btn-secondary mb-2" onclick="toggleCheckboxes('hombres', true)">Seleccionar todos hombres</button>
            <button type="button" class="btn btn-sm btn-secondary mb-2" onclick="toggleCheckboxes('mujeres', true)">Seleccionar todos mujeres</button>
            <button type="button" class="btn btn-sm btn-danger mb-2" onclick="toggleCheckboxes('all', false)">Deseleccionar todos</button>

        </div>

       
        
        <div class="row">
          <!-- Categorías Mujeres a la izquierda -->
          <div class="col-md-6">
            <h4>Categorías Mujeres</h4>
            <button type="button" class="btn btn-sm btn-primary mb-2" onclick="toggleCheckboxes('mujeres', true)">Seleccionar todo</button>
            <button type="button" class="btn btn-sm btn-secondary mb-2" onclick="toggleCheckboxes('mujeres', false)">Deseleccionar todo</button>

            <% @categorias.where(sexo: 'Mujeres').each do |categoria| %>
              <div class="form-check">
                <%= check_box_tag "campeonato[categoria_ids][]", categoria.id, @campeonato.categoria_ids.include?(categoria.id), id: "categoria_#{categoria.id}", class: "form-check-input mujeres" %>
                <%= label_tag "categoria_#{categoria.id}", categoria.nombre, class: "form-check-label" %>
              </div>
            <% end %>
          </div>

          <!-- Categorías Hombres a la derecha -->
          <div class="col-md-6">
            <h4>Categorías Hombres</h4>
            <button type="button" class="btn btn-sm btn-primary mb-2" onclick="toggleCheckboxes('hombres', true)">Seleccionar todo</button>
            <button type="button" class="btn btn-sm btn-secondary mb-2" onclick="toggleCheckboxes('hombres', false)">Deseleccionar todo</button>

            <% @categorias.where(sexo: 'Hombres').each do |categoria| %>
              <div class="form-check">
                <%= check_box_tag "campeonato[categoria_ids][]", categoria.id, @campeonato.categoria_ids.include?(categoria.id), id: "categoria_#{categoria.id}", class: "form-check-input hombres" %>
                <%= label_tag "categoria_#{categoria.id}", categoria.nombre, class: "form-check-label" %>
              </div>
            <% end %>
          </div>
        </div>
    </div>

    <!-- Inscripciones -->
    <div class="tab-pane fade" id="inscripciones" role="tabpanel" aria-labelledby="inscripciones-tab">
          <% if @campeonato.inscripciones.any? %>
            <table class="table">
              <thead>
                <tr>
                  <th>Jugador</th>
                  <th>Categoría</th>
                </tr>
              </thead>
              <tbody>
                <% @campeonato.inscripciones.each do |inscripcion| %>
                  <tr>
                    <td><%= inscripcion.user.nombre %></td>
                    <td><%= inscripcion.categoria.nombre %></td>
                  </tr>
                <% end %>
              </tbody>
            </table>
          <% else %>
            <p>No hay inscripciones registradas.</p>
          <% end %>
        </div>
    </div>
    
    
    
    <!-- Partidos -->
    <div class="tab-pane fade" id="partidos" role="tabpanel" aria-labelledby="partidos-tab">
      <!-- Subpestañas -->
      <ul class="nav nav-tabs mt-3" id="partidosSubTabs" role="tablist">
        <li class="nav-item" role="presentation">
          <a class="nav-link active" id="horarios-tab" data-bs-toggle="tab" href="#horarios" role="tab" aria-controls="horarios" aria-selected="true">Horarios Bloqueados</a>
        </li>
        <li class="nav-item" role="presentation">
          <a class="nav-link" id="calendario-tab" data-bs-toggle="tab" href="#calendario" role="tab" aria-controls="calendario" aria-selected="false">Generación de Calendario</a>
        </li>
      </ul>

      <div class="tab-content pt-3" id="partidosSubTabsContent">
        <!-- Subpestaña: Horarios Bloqueados -->
        <div class="tab-pane fade show active" id="horarios" role="tabpanel" aria-labelledby="horarios-tab">
          <div>
            <h5>Selecciona los horarios bloqueados</h5>
            <div class="alert alert-info">
              El calendario se genera dinámicamente según la <strong>fecha de inicio</strong> y <strong>fecha de término</strong> del campeonato.
            </div>

            <div class="row mb-3">
              <div class="col-md-3">
                <%= form.label :fecha_inicio, "Fecha de Inicio" %>
                <%= form.date_field :fecha_inicio, class: "form-control form-control-sm", id: "fecha_inicio_bloqueo" %>
              </div>
              <div class="col-md-3">
                <%= form.label :fecha_termino, "Fecha de Término" %>
                <%= form.date_field :fecha_termino, class: "form-control form-control-sm", id: "fecha_termino_bloqueo" %>
              </div>
            </div>

            <div id="bloqueador-calendario" class="table-responsive">
              <table class="table table-bordered text-center" style="font-size: 0.85rem; border-collapse: collapse;">
                <thead>
                  <tr>
                    <th style="padding: 4px 6px; min-width: 40px;">Hora</th>
                    <th style="padding: 4px 6px;">Lunes</th>
                    <th style="padding: 4px 6px;">Martes</th>
                    <th style="padding: 4px 6px;">Miércoles</th>
                    <th style="padding: 4px 6px;">Jueves</th>
                    <th style="padding: 4px 6px;">Viernes</th>
                    <th style="padding: 4px 6px;">Sábado</th>
                    <th style="padding: 4px 6px;">Domingo</th>
                  </tr>
                </thead>
                <tbody id="bloqueador-body" style="line-height: 1.2;">
                  <!-- Se rellena con JS -->
                </tbody>
              </table>
            </div>

            <button type="button" class="btn btn-primary btn-sm mt-3" id="guardar-bloqueos">Guardar Horarios Bloqueados</button>
          </div>
        </div>


        <!-- Subpestaña: Generación de Calendario -->
        <div class="tab-pane fade" id="calendario" role="tabpanel" aria-labelledby="calendario-tab">
          <h4>Generación de Calendario del Campeonato</h4>

          <div class="row">
            <!-- Columna izquierda: Datos -->
            <div class="col-md-6">
              <div class="row mb-3">
                <div class="col-md-6">
                    <%= form.label :fecha_inicio, "Fecha de Inicio" %>
                    <%= form.date_field :fecha_inicio, class: "form-control form-control-sm", id: "fecha-inicio", disabled: true  %>
                </div>
                <div class="col-md-6">
                    <%= form.label :fecha_termino, "Fecha de Término" %>
                <%= form.date_field :fecha_termino, class: "form-control form-control-sm", id: "fecha-fin", disabled: true  %>
                </div>
              </div>

              <div class="row mb-3">
                <div class="col-md-6">
                  <label for="duracion" class="form-label">Duración por partido (min)</label>
                  <input type="number" id="duracion" class="form-control" value="75">
                </div>
                <div class="col-md-6">
                  <label for="cupo-max" class="form-label">Cupo máximo de parejas</label>
                    <%= form.number_field :cupos_maximos, class: "form-control", id: "cupo-max", disabled: true%>
                </div>

              </div>
            </div>

            <!-- Columna derecha: Canchas -->
            <div class="col-md-6">
              <div class="mb-3">
                <label class="form-label">Selecciona las canchas a utilizar:</label>
                <% @canchas.each do |cancha| %>
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" value="<%= cancha.id %>" id="cancha_<%= cancha.id %>" name="canchas[]">
                    <label class="form-check-label" for="cancha_<%= cancha.id %>">
                      <%= cancha.nombre %> (N° <%= cancha.numero %>)
                    </label>
                  </div>
                <% end %>
              </div>
            </div>
          </div>

          <!-- Botón y resultado -->
          <div class="mt-4">
            <button type="button" class="btn btn-primary" id="btn-generar-fixture">Generar calendario de partidos</button>
            <div id="resultado-fixture" class="mt-4"></div>
            <div id="calendario-fixture" style="width: 100%; margin: 40px auto3;"></div>
          </div>
        </div>


      </div>

    </div>

  <div class="mt-4">
    <%= form.submit "Guardar Campeonato", class: "btn btn-primary" %>
  </div>
<% end %>
<script>
  // Agregar nuevo tipo inscripción
  document.getElementById('agregar-tipo').addEventListener('click', function() {
    const container = document.getElementById('tipos-inscripcion-container');
    const count = container.querySelectorAll('.tipo-inscripcion').length + 1;

    const div = document.createElement('div');
    div.classList.add('mb-3', 'border', 'p-3', 'rounded', 'tipo-inscripcion');

    div.innerHTML = `
      <h6>Tipo de Inscripción ${count}</h6>
      <button type="button" class="btn btn-sm btn-danger float-end eliminar-tipo">Eliminar</button>
      <div class="mb-2">
        <label>Nombre</label>
        <input type="text" class="form-control" name="tipo_nombre[]">
      </div>
      <div class="mb-2">
        <label>Monto</label>
        <input type="number" class="form-control" name="tipo_monto[]">
      </div>
      <div class="mb-2">
        <label>Fecha límite de pago</label>
        <input type="date" class="form-control" name="tipo_fecha_limite[]">
      </div>
      <div class="mb-2">
        <label>Beneficios</label>
        <textarea class="form-control" name="tipo_beneficios[]"></textarea>
      </div>
    `;

    container.appendChild(div);
  });

  // Eliminar tipo inscripción
  document.getElementById('tipos-inscripcion-container').addEventListener('click', function(event) {
    if(event.target.classList.contains('eliminar-tipo')) {
      const tipoDiv = event.target.closest('.tipo-inscripcion');
      tipoDiv.remove();
      // Re-numerar títulos
      const tipos = document.querySelectorAll('.tipo-inscripcion h6');
      tipos.forEach((h6, index) => {
        h6.textContent = `Tipo de Inscripción ${index + 1}`;
      });
    }
  });
</script>


<script>
  // Función para seleccionar/deseleccionar checkboxes según grupo
  function toggleCheckboxes(group, select) {
    let checkboxes;
    if (group === 'all') {
      checkboxes = document.querySelectorAll('.form-check-input');
    } else if (group === 'hombres') {
      checkboxes = document.querySelectorAll('.form-check-input.hombres');
    } else if (group === 'mujeres') {
      checkboxes = document.querySelectorAll('.form-check-input.mujeres');
    }

    checkboxes.forEach(cb => cb.checked = select);
  }
</script>

<script src="https://cdn.jsdelivr.net/npm/luxon@3/build/global/luxon.min.js"></script>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    console.log("✅ DOM completamente cargado");

    const dias = ["Lunes", "Martes", "Miércoles", "Jueves", "Viernes", "Sábado", "Domingo"];
    const bloqueadorBody = document.getElementById("bloqueador-body");
    const campeonatoId = <%= @campeonato.id %>; // Debe estar presente en tu template

    // Construcción de la tabla - filas desde las 08 hasta las 22 horas
    for (let h = 8; h <= 22; h++) {
      const row = document.createElement("tr");

      const hora = document.createElement("td");
      hora.textContent = `${h.toString().padStart(2, "0")}:00`;
      row.appendChild(hora);

      dias.forEach(dia => {
        const cell = document.createElement("td");
        cell.dataset.hora = h;
        cell.dataset.dia = dia;
        cell.style.cursor = "pointer";
        cell.classList.add("bloque-horario");

        cell.addEventListener("click", function () {
          this.classList.toggle("table-primary");
        });

        row.appendChild(cell);
      });

      bloqueadorBody.appendChild(row);
    }

   // Cargar bloqueos guardados
    const urlBloqueos = `/campeonatos/${campeonatoId}/bloqueos`;
    console.log("🔄 Cargando bloqueos desde:", urlBloqueos);

    fetch(urlBloqueos)
      .then(res => {
        if (!res.ok) {
          throw new Error(`❌ Error al cargar bloqueos (${res.status})`);
        }
        return res.json();
      })
      .then(data => {
        console.log("📦 Bloqueos recibidos:", data);

        // Orden de días según tu tabla (empieza en Lunes)
        const diasJS = ["Lunes", "Martes", "Miércoles", "Jueves", "Viernes", "Sábado", "Domingo"];

      data.forEach(bloqueo => {
        if (!bloqueo.fechahora_inicio) {
          console.warn("Bloqueo sin fecha de inicio:", bloqueo);
          return;
        }

        const fecha = new Date(bloqueo.fechahora_inicio);

        // Obtener valores en UTC para evitar desajustes por zona horaria
        const hora = fecha.getUTCHours();
        let diaIndex = fecha.getUTCDay();
        diaIndex = (diaIndex + 6) % 7;
        const dia = dias[diaIndex]; // ["Lunes", ..., "Domingo"]

        console.log(`✅ Procesando bloqueo UTC: ${dia} ${hora}:00`);

        if (hora < 8 || hora > 22) {
          console.log(`⛔ Bloqueo fuera del rango visible: ${dia} ${hora}`);
          return;
        }

        const selector = `.bloque-horario[data-dia="${dia}"][data-hora="${hora}"]`;
        const cell = document.querySelector(selector);

        if (cell) {
          cell.classList.add("table-primary");
        } else {
          console.warn(`⚠️ No se encontró celda para ${dia} ${hora}`);
        }
      });
      })
      .catch(error => {
        console.error("❌ Error en fetch de bloqueos:", error);
      });


    // Guardar bloqueos
    document.getElementById("guardar-bloqueos").addEventListener("click", () => {
      const fecha_inicio = document.getElementById("fecha_inicio_bloqueo").value;
      const fecha_termino = document.getElementById("fecha_termino_bloqueo").value;

      const seleccionados = Array.from(document.querySelectorAll(".bloque-horario.table-primary"))
        .map(cell => ({
          dia: cell.dataset.dia,
          hora: cell.dataset.hora
        }));

      console.log("📤 Enviando bloqueos:", seleccionados);
      console.log("📅 Fecha inicio:", fecha_inicio);
      console.log("📅 Fecha término:", fecha_termino);

      const urlGuardar = `/campeonatos/${campeonatoId}/guardar_bloqueos`;
      console.log("📨 URL POST:", urlGuardar);

      fetch(urlGuardar, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          "X-CSRF-Token": document.querySelector("[name='csrf-token']").content
        },
        body: JSON.stringify({
          bloqueos: seleccionados,
          fecha_inicio,
          fecha_termino
        })
      })
        .then(res => {
          console.log("🔽 Respuesta POST status:", res.status);
          if (!res.ok) {
            throw new Error(`❌ Error al guardar bloqueos (${res.status})`);
          }
          return res.json();
        })
        .then(data => {
          console.log("✅ Bloqueos guardados correctamente:", data);
          alert("Bloqueos guardados con éxito.");
        })
        .catch(error => {
          console.error("❌ Error al guardar bloqueos:", error);
          alert("Error al guardar bloqueos.");
        });
    });
  });
</script>

<script>
  document.getElementById('btn-generar-fixture').addEventListener('click', function (event) {
    event.preventDefault();

    // Obtener datos del formulario
    const csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute('content');
    const fechaInicio = document.getElementById('fecha-inicio').value;
    const fechaFin = document.getElementById('fecha-fin').value;
    const duracion = parseInt(document.getElementById('duracion').value, 10);
    const cupoMax = document.getElementById('cupo-max').value;
    const campeonatoId = parseInt(document.getElementById('campeonato-id').value);
    const canchas = Array.from(document.querySelectorAll('input[name="canchas[]"]:checked')).map(el => el.value);

    // Validaciones básicas antes de enviar
    if (!fechaInicio || !fechaFin) {
      alert('Por favor, ingresa fecha de inicio y fecha de fin.');
      return;
    }
    if (isNaN(duracion) || duracion <= 0) {
      alert('Por favor, ingresa una duración válida.');
      return;
    }
    if (canchas.length === 0) {
      alert('Selecciona al menos una cancha.');
      return;
    }
    if (isNaN(campeonatoId) || campeonatoId <= 0) {
      alert('Id de campeonato inválido.');
      return;
    }

    const coloresPorCancha = {
      1: '#1abc9c',
      2: '#3498db',
      3: '#9b59b6',
      4: '#e67e22',
      5: '#e74c3c',
      6: '#2ecc71'
    };

    fetch('/generar_fixture', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-CSRF-Token': csrfToken
      },
      body: JSON.stringify({
        fecha_inicio: fechaInicio,
        fecha_fin: fechaFin,
        duracion: duracion,
        canchas: canchas,
        cupo_max: cupoMax,
        campeonato_id: campeonatoId
      })
    })
    .then(async response => {
      const data = await response.json();

      if (!response.ok) {
        // Mostrar error detallado del backend
        const mensajeError = data.error || 'Error desconocido del servidor.';
        document.getElementById('resultado-fixture').innerHTML = `
          <div class="alert alert-danger">Error al generar fixture: ${mensajeError}</div>`;
        return;
      }

      if (!data.partidos || data.partidos.length === 0) {
        document.getElementById('resultado-fixture').innerHTML = `
          <div class="alert alert-warning">No se encontraron partidos para mostrar.</div>`;
        return;
      }

      // Agrupar partidos por cancha
      const partidosPorCancha = {};
      data.partidos.forEach(p => {
        if (!partidosPorCancha[p.cancha_id]) partidosPorCancha[p.cancha_id] = [];
        partidosPorCancha[p.cancha_id].push(p);
      });

      // Construir tabs y contenido
      let tabsHtml = `<ul class="nav nav-tabs" id="canchasTabs" role="tablist">`;
      let tabsContentHtml = `<div class="tab-content" id="canchasTabsContent">`;

      canchas.forEach((canchaId, index) => {
        const activeClass = index === 0 ? 'active' : '';
        const showClass = index === 0 ? 'show active' : '';

        tabsHtml += `
          <li class="nav-item" role="presentation">
            <button class="nav-link ${activeClass}" id="tab-cancha-${canchaId}" data-bs-toggle="tab" data-bs-target="#cancha-${canchaId}" type="button" role="tab" aria-controls="cancha-${canchaId}" aria-selected="${index === 0}">
              Cancha ${canchaId}
            </button>
          </li>
        `;

        tabsContentHtml += `
          <div class="tab-pane fade ${showClass}" id="cancha-${canchaId}" role="tabpanel" aria-labelledby="tab-cancha-${canchaId}">
            <div id="calendar-${canchaId}"></div>
          </div>
        `;
      });

      tabsHtml += `</ul>`;
      tabsContentHtml += `</div>`;

      const resultadoDiv = document.getElementById('resultado-fixture');
      resultadoDiv.innerHTML = tabsHtml + tabsContentHtml;

      const calendarios = {};
      const bloqueos = data.bloqueos || [];

      canchas.forEach(canchaId => {
        const calendarEl = document.getElementById(`calendar-${canchaId}`);

        const partidosEventos = (partidosPorCancha[canchaId] || []).map(p => {
          const start = new Date(p.fecha_hora);
          const end = new Date(start.getTime() + duracion * 60000);
          return {
            title: `${p.pareja_1.nombre} vs ${p.pareja_2.nombre}`,
            start: start.toISOString(),
            end: end.toISOString(),
            backgroundColor: coloresPorCancha[canchaId] || '#95a5a6',
            borderColor: coloresPorCancha[canchaId] || '#95a5a6'
          };
        });

        const eventosBloqueados = bloqueos.map(b => {

          const startIso = b.fechahora_inicio.replace(' ', 'T');
          const endIso = b.fechahora_fin.replace(' ', 'T');

          return {
            title: 'Bloqueado',
            start: startIso,
            end: endIso,
            backgroundColor: '#cccccc',
            borderColor: '#999999',
            rendering: 'background',
            overlap: false,
            display: 'background'
          };
        });

        const calendar = new FullCalendar.Calendar(calendarEl, {
          initialView: 'timeGridWeek',
          slotMinTime: '08:00:00',
          slotMaxTime: '23:00:00',
          scrollTime: '08:00:00',  
          allDaySlot: false,
          locale: 'es',
          height: 'auto',
          initialDate: data.partidos.length > 0
            ? new Date(data.partidos[0].fecha_hora).toISOString().slice(0, 10)
            : new Date().toISOString().slice(0, 10),
          events: [...partidosEventos, ...eventosBloqueados],
          headerToolbar: {
            left: 'prev,next today',
            center: 'title',
            right: 'timeGridWeek,timeGridDay'
          }
        });

        calendar.render();
        calendarios[canchaId] = calendar;
      });

      // Ajustar tamaño calendario al cambiar tabs
      document.querySelectorAll('#canchasTabs button[data-bs-toggle="tab"]').forEach(tabBtn => {
        tabBtn.addEventListener('shown.bs.tab', (event) => {
          const canchaId = event.target.id.replace('tab-cancha-', '');
          if (calendarios[canchaId]) {
            calendarios[canchaId].updateSize();
          }
        });
      });

      // Ajustar tamaño al mostrar el primer calendario
      const primeraCancha = canchas[0];
      if (calendarios[primeraCancha]) {
        calendarios[primeraCancha].updateSize();
      }

    })
    .catch(error => {
      console.error('Error generando fixture:', error);
      document.getElementById('resultado-fixture').innerHTML = `<div class="alert alert-danger">Error al generar fixture: ${error.message}</div>`;
    });
  });
</script>


<style>

  .fc-timegrid-slot {
    height: 20px !important; /* Más pequeño que antes, prueba con valores entre 15 y 25 */
    min-height: 20px !important;
  }

  /* Ajusta el alto del contenedor para que el calendario no sobresalga */
  #calendario-fixture .tab-pane {
    padding: 1rem;
    max-height: 600px;
    overflow-y: auto;
  }

  /* Mejora la visibilidad del texto dentro del evento */
  .fc-event {
    font-size: 0.75rem !important;  /* Más pequeña que antes, ajusta a lo que necesites */
    padding: 2px 4px !important;
    white-space: normal;
    line-height: 1.1;
  }

  /* Evita que el texto de los eventos se corte */
  .fc-event-title {
    font-size: 0.75rem !important;
    white-space: normal !important;
    word-break: break-word;
    font-weight: bold;
    text-align: center; 
    padding: 0 !important;
    margin: 0 !important;
  }

  /* Mejora visual para que no se vean todos los calendarios juntos */
  #calendario-fixture .tab-content > .tab-pane:not(.active) {
    display: none;
  }

</style>
